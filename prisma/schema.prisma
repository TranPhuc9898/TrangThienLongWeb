// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id               String           @id @default(cuid())
  // Basic Info
  productName      String           // "iPhone 15 Pro Max"
  brand            String           // "Apple"
  condition        String           @default("99%") // "99%", "New", "Refurbished"
  slug             String           @unique
  tag              String?          // "iPhone 15 Pro Max" - for filtering
  
  // Region Code for iPhone 14+ (LL/A, VN/A, etc.)
  regionCode       String?          // "LL/A", "VN/A", null for < iPhone 14
  
  // Pricing & Currency
  basePrice        BigInt           // Base price in smallest unit
  currency         String           @default("VND")
  discount         String?          // Discount percentage like "-5%"
  
  // Media
  thumbnail        String           // Default/main product image
  description      String?          // Product description
  
  // Promotions
  promotionGeneral String?          // "Ưu đãi giảm thêm đến 200.000đ"
  promotionStudent String?          // "Sinh viên/Học sinh giảm thêm đến 300.000đ"
  installment      String?          // "Không phí chuyển đổi khi trả góp 0%..."
  
  // Metadata
  category         String
  rating           Float            @default(4.9)
  reviewCount      Int              @default(0)
  featured         Boolean          @default(false)
  inStock          Boolean          @default(true)
  series           String?          // "iPhone 14", "iPhone 15", etc.
  iphoneModel      String?          // "iPhone 15 Pro", "iPhone 14 Pro Max", etc.
  technicalSpecs   String?          // JSON string of technical specifications
  
  // Relationships
  variants         ProductVariant[]
  colors           ProductColor[]
  regionPrices     RegionPrice[]    // Giá khác nhau theo mã vùng
  
  // Timestamps
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  @@map("products")
}

model ProductVariant {
  id        String   @id @default(cuid())
  
  // Variant Details
  storage   String   // "128GB", "256GB", "512GB", "1TB"
  color     String   // "Black Titanium", "Blue Titanium", etc.
  price     BigInt   // Specific price for this variant
  image     String   // Specific image for this color/storage combo
  // images removed; gallery is managed per color
  
  // Stock Management
  inStock   Boolean  @default(true)
  quantity  Int      @default(0) // Available quantity
  
  // Relationship
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, storage, color]) // Prevent duplicate combinations
  @@map("product_variants")
}

model ProductColor {
  id        String  @id @default(cuid())
  color     String
  images    Json    // up to 5 URLs
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, color])
  @@map("product_colors")
}

model RegionPrice {
  id        String   @id @default(cuid())
  
  // Region pricing
  regionCode String  // "LL/A", "VN/A", etc.
  price     BigInt  // Price for this specific region
  
  // Relationship
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  
  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([productId, regionCode])
  @@map("region_prices")
}

model AdminSession {
  id        String   @id @default(cuid())
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@map("admin_sessions")
}
model Banner {
  id        String   @id @default(cuid())
  title     String
  imageUrl  String
  link      String?
  order     Int
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("banners")
}
